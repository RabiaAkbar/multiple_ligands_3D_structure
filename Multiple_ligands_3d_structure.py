# -*- coding: utf-8 -*-
"""ligand_3d_Structure_.pdb.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1yKZjXv1Xz0ZLmYNCyEB104BCa9Sf85ah
"""

pip install rdkit

import pandas as pd
from rdkit import Chem
from rdkit.Chem import AllChem

# Load CSV with columns: SMILES, Name, PubChemID
df = pd.read_csv('hi.csv')

# Create an SDWriter object to write all structures to one index file (SDF)
index_writer = Chem.SDWriter('index_file.sdf')

# Function to convert SMILES to 3D structure and save as PDB file
def smiles_to_3d(smiles, pubchem_id):
    try:
        # Convert SMILES to RDKit molecule
        mol = Chem.MolFromSmiles(smiles)
        if mol is None:
            print(f"Invalid SMILES for PubChem ID {pubchem_id}")
            return None

        # Add Hydrogens and generate 3D coordinates
        mol = Chem.AddHs(mol)
        AllChem.EmbedMolecule(mol)

        # Save molecule as PDB file with PubChem ID as filename
        pdb_file_name = f"{pubchem_id}.pdb"
        with open(pdb_file_name, 'w') as f:
            f.write(Chem.MolToPDBBlock(mol))

        # Add PubChem ID as a property to the molecule for the index file
        mol.SetProp("_Name", pubchem_id)

        return mol

    except Exception as e:
        print(f"Error processing PubChem ID {pubchem_id}: {e}")
        return None

# Iterate over the DataFrame and convert each SMILES
for index, row in df.iterrows():
    smiles = row['SMILES']
    pubchem_id = str(row['Pubchem'])  # Convert PubChemID to string
    mol = smiles_to_3d(smiles, pubchem_id)

    if mol is not None:
        # Write the molecule to the index file
        index_writer.write(mol)

# Close the index writer after saving all structures
index_writer.close()

print("Conversion completed! PDB files and index file 'index_file.sdf' saved.")